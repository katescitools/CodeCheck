
ERR1 = 'Header files should only be .h, .hpp or .hxx'


# The ID for the check
def ids():
    return ('A3-1-2', 'CPP_H009')

# The short name of the check
def name(id):
    return {
        'A3-1-2': 'Published Standards/AUTOSAR/Header files, that are defined locally in the project, shall have a file name extension of one of: ".h", ".hpp" or ".hxx"',
        'CPP_H009': 'All Checks/Language Specific/C and C++/Headers/Header files, that are defined locally in the project, shall have a file name extension of one of: ".h", ".hpp" or ".hxx"',
    }[id]


# The short description of the check
def description():
    return 'Header files, that are defined locally in the project, shall have a file name extension of one of: ".h", ".hpp" or ".hxx".'


# The long description of the check
def detailed_description():
    return '''
<p><b>Rationale</b><br>
This is consistent with developer expectations to provide header files with one of the standard file name extensions.
</p>

<p><b>Example</b></p>
<pre>
//% $Id: A3-1-2.cpp 266557 2017-02-07 13:08:19Z piotr.tanski $
//#include &lt;h3.h&gt;   // Compliant
//#include &lt;h1.hpp&gt; // Compliant
//#include &lt;h2.hxx&gt; // Compliant
//#include &lt;h4.cpp&gt; // Non-compliant
//#include &lt;h5.c&gt;   // Non-compliant
//#include &lt;h6.hdr&gt; // Non-compliant
//#include &lt;h7.inc&gt; // Non-compliant
</pre>

<p><b>See also</b><br>
â€¢ JSF December 2005 [8]: 4.9.2 AV Rule 53 Header files will always have a file name extension of ".h".
</p>
'''


# Tests the type of file
def test_entity(file):
    return file.kind().check('code file, header file')


def test_global():
    return False


def test_language(language):
    return language == 'C++'


def check(check, file):
    for ref in file.refs('Include', '~Unknown ~Unresolved File', True):
        ent = ref.ent()

        # Skip file extensions that are allowed
        ext = ent.name().split('.')[-1]
        if ext in {'h', 'hpp', 'hxx'}:
            continue

        check.violation(ent, ref.scope(), ref.line(), ref.column(), ERR1)
